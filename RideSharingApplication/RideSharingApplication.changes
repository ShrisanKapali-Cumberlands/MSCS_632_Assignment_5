----QUIT----2025-06-26T10:23:38.448886+02:00 Pharo13.0-SNAPSHOT-64bit-e698f20169.image priorSource: 0!----QUIT----2025-06-26T10:23:38.450755+02:00 Pharo13.0-SNAPSHOT-64bit-e698f20169.image priorSource: 0!----QUIT----2025-06-26T10:23:58.641326+02:00 Pharo13.0-SNAPSHOT-64bit-e698f20169.image priorSource: 104!----QUIT----2025-06-26T10:23:58.642459+02:00 Pharo13.0-SNAPSHOT-64bit-e698f20169.image priorSource: 208!----QUIT----2025-06-26T10:23:59.131614+02:00 Pharo13.0-SNAPSHOT-64bit-e698f20169.image priorSource: 314!----QUIT----2025-06-26T10:23:59.132292+02:00 Pharo13.0-SNAPSHOT-64bit-e698f20169.image priorSource: 420!Object << #Ride    slots: { #rideID . #pickupLocation . #dropoffLocation . #distance . #fare };    package: 'RideSharingSystem'!!Ride methodsFor: 'nil' stamp: '2025-07-12T15:47:19.206-05:00'!rideID    ^ rideID! !!Ride methodsFor: 'nil' stamp: '2025-07-12T15:47:43.034-05:00'!pickupLocation    ^ pickupLocation! !!Ride methodsFor: 'nil' stamp: '2025-07-12T15:47:54.206-05:00'!dropoffLocation    ^ dropoffLocation! !!Ride methodsFor: 'nil' stamp: '2025-07-12T15:47:59.067-05:00'!distance    ^ distance! !!Ride methodsFor: 'accessing' stamp: '2025-07-12T15:48:05.198-05:00'!fare    ^ fare! !!Ride methodsFor: 'nil' stamp: '2025-07-12T15:48:18.683-05:00'!rideID: anID    rideID := anID! !!Ride methodsFor: 'nil' stamp: '2025-07-12T15:48:23.601-05:00'!pickupLocation: aLocation    pickupLocation := aLocation! !!Ride methodsFor: 'nil' stamp: '2025-07-12T15:48:28.214-05:00'!dropoffLocation: aLocation    dropoffLocation := aLocation! !!Ride methodsFor: 'nil' stamp: '2025-07-12T15:48:32.381-05:00'!distance: aDistance    distance := aDistance! !!Ride methodsFor: 'nil' stamp: '2025-07-12T15:48:38.001-05:00'!fare: aFare    fare := aFare! !!Ride methodsFor: 'nil' stamp: '2025-07-12T15:48:46.883-05:00'!initializeWithID: anID pickup: aPickup dropoff: aDropoff distance: aDistance    rideID := anID.    pickupLocation := aPickup.    dropoffLocation := aDropoff.    distance := aDistance.    fare := self calculateFare! !!Ride methodsFor: 'nil' stamp: '2025-07-12T15:48:53.323-05:00'!calculateFare    "Base fare calculation: $2.50 base + $1.50 per mile"    ^ 2.50 + (distance * 1.50)! !!Ride methodsFor: 'nil' stamp: '2025-07-12T15:49:09.001-05:00'!rideDetails    ^ String streamContents: [ :stream |        stream             nextPutAll: 'Ride ID: '; nextPutAll: rideID asString; cr;            nextPutAll: 'From: '; nextPutAll: pickupLocation; cr;            nextPutAll: 'To: '; nextPutAll: dropoffLocation; cr;            nextPutAll: 'Distance: '; nextPutAll: distance asString; nextPutAll: ' miles'; cr;            nextPutAll: 'Fare: $'; nextPutAll: self calculateFare asString ]! !Ride << #StandardRide    slots: { };    package: 'RideSharingSystem'!!StandardRide methodsFor: 'nil' stamp: '2025-07-12T15:49:38.692-05:00'!calculateFare    "Standard fare: $2.00 base + $1.25 per mile"    ^ 2.00 + (distance * 1.25)! !!StandardRide methodsFor: 'nil' stamp: '2025-07-12T15:49:59.739-05:00'!rideDetails    ^ String streamContents: [ :stream |        stream             nextPutAll: '[STANDARD] ';            nextPutAll: super rideDetails ]! !Ride << #PremiumRide    slots: { #vehicleType };    package: 'RideSharingSystem'!!PremiumRide methodsFor: 'nil' stamp: '2025-07-12T15:50:28.173-05:00'!vehicleType    ^ vehicleType! !!PremiumRide methodsFor: 'nil' stamp: '2025-07-12T15:50:31.444-05:00'!vehicleType: aType    vehicleType := aType! !!PremiumRide methodsFor: 'nil' stamp: '2025-07-12T15:50:38.535-05:00'!initializeWithID: anID pickup: aPickup dropoff: aDropoff distance: aDistance    super initializeWithID: anID pickup: aPickup dropoff: aDropoff distance: aDistance.    vehicleType := 'Luxury Sedan'! !!PremiumRide methodsFor: 'nil' stamp: '2025-07-12T15:50:45.47-05:00'!calculateFare    "Premium fare: $5.00 base + $2.50 per mile + luxury surcharge"    | baseFare luxurySurcharge |    baseFare := 5.00 + (distance * 2.50).    luxurySurcharge := distance * 0.75.    ^ baseFare + luxurySurcharge! !!PremiumRide methodsFor: 'nil' stamp: '2025-07-12T15:50:53.447-05:00'!rideDetails    ^ String streamContents: [ :stream |        stream             nextPutAll: '[PREMIUM] ';            nextPutAll: super rideDetails; cr;            nextPutAll: 'Vehicle Type: '; nextPutAll: vehicleType ]! !Object << #Driver    slots: { #driverID . #name . #rating . #assignedRides };    package: 'RideSharingSystem'!!Driver methodsFor: 'nil' stamp: '2025-07-12T15:51:09.441-05:00'!initializeWithID: anID name: aName rating: aRating    driverID := anID.    name := aName.    rating := aRating.    assignedRides := OrderedCollection new! !!Driver methodsFor: 'nil' stamp: '2025-07-12T15:51:17.302-05:00'!driverID    ^ driverID! !!Driver methodsFor: 'nil' stamp: '2025-07-12T15:51:22.132-05:00'!name    ^ name! !!Driver methodsFor: 'nil' stamp: '2025-07-12T15:51:27.356-05:00'!rating    ^ rating! !!Driver methodsFor: 'nil' stamp: '2025-07-12T15:51:34.906-05:00'!rating: newRating    rating := newRating! !!Driver methodsFor: 'nil' stamp: '2025-07-12T15:51:41.545-05:00'!addRide: aRide    "Add a ride to the driver's assigned rides list"    assignedRides add: aRide! !!Driver methodsFor: 'nil' stamp: '2025-07-12T15:51:45.963-05:00'!getAssignedRides    "Return a copy of assigned rides for encapsulation"    ^ assignedRides copy! !!Driver methodsFor: 'nil' stamp: '2025-07-12T15:51:50.884-05:00'!totalRides    ^ assignedRides size! !!Driver methodsFor: 'nil' stamp: '2025-07-12T15:51:56.227-05:00'!totalEarnings    ^ assignedRides inject: 0 into: [ :sum :ride | sum + ride calculateFare ]! !!Driver methodsFor: 'nil' stamp: '2025-07-12T15:52:01.699-05:00'!getDriverInfo    ^ String streamContents: [ :stream |        stream             nextPutAll: 'Driver ID: '; nextPutAll: driverID asString; cr;            nextPutAll: 'Name: '; nextPutAll: name; cr;            nextPutAll: 'Rating: '; nextPutAll: rating asString; nextPutAll: '/5.0'; cr;            nextPutAll: 'Total Rides: '; nextPutAll: self totalRides asString; cr;            nextPutAll: 'Total Earnings: $'; nextPutAll: self totalEarnings asString ]! !Object << #Rider    slots: { #riderID . #name . #requestedRides };    package: 'RideSharingSystem'!!Rider methodsFor: 'nil' stamp: '2025-07-12T15:52:21.35-05:00'!initializeWithID: anID name: aName    riderID := anID.    name := aName.    requestedRides := OrderedCollection new! !!Rider methodsFor: 'nil' stamp: '2025-07-12T15:52:27.785-05:00'!riderID    ^ riderID! !!Rider methodsFor: 'nil' stamp: '2025-07-12T15:52:32.561-05:00'!name    ^ name! !!Rider methodsFor: 'nil' stamp: '2025-07-12T15:52:37.8-05:00'!getRequestedRides    "Return a copy of requested rides for encapsulation"    ^ requestedRides copy! !!Rider methodsFor: 'nil' stamp: '2025-07-12T15:52:43.915-05:00'!requestRide: aRide    "Add a ride to the rider's requested rides list"    requestedRides add: aRide! !!Rider methodsFor: 'nil' stamp: '2025-07-12T15:52:47.8-05:00'!totalRides    ^ requestedRides size! !!Rider methodsFor: 'nil' stamp: '2025-07-12T15:52:52.064-05:00'!totalSpent    ^ requestedRides inject: 0 into: [ :sum :ride | sum + ride calculateFare ]! !!Rider methodsFor: 'nil' stamp: '2025-07-12T15:52:57.14-05:00'!viewRides    ^ String streamContents: [ :stream |        stream             nextPutAll: 'Rider: '; nextPutAll: name; cr;            nextPutAll: 'Total Rides: '; nextPutAll: self totalRides asString; cr;            nextPutAll: 'Total Spent: $'; nextPutAll: self totalSpent asString; cr;            nextPutAll: '--- Ride History ---'; cr.        requestedRides do: [ :ride |            stream nextPutAll: ride rideDetails; cr; cr ] ]! !Object << #RideSharingSystem    slots: { #drivers . #riders . #allRides };    package: 'RideSharingSystem'!!RideSharingSystem methodsFor: 'nil' stamp: '2025-07-12T15:53:12.123-05:00'!initialize    drivers := OrderedCollection new.    riders := OrderedCollection new.    allRides := OrderedCollection new! !!RideSharingSystem methodsFor: 'nil' stamp: '2025-07-12T15:53:26.69-05:00'!addDriver: aDriver    drivers add: aDriver! !!RideSharingSystem methodsFor: 'nil' stamp: '2025-07-12T15:53:31.102-05:00'!addRider: aRider    riders add: aRider! !!RideSharingSystem methodsFor: 'nil' stamp: '2025-07-12T15:53:35.35-05:00'!addRide: aRide    allRides add: aRide! !!RideSharingSystem methodsFor: 'nil' stamp: '2025-07-12T15:53:40.535-05:00'!getAllRides    ^ allRides copy! !!RideSharingSystem methodsFor: 'nil' stamp: '2025-07-12T15:53:45.526-05:00'!demonstratePolymorphism    "Demonstrate polymorphism by calling methods on different ride types"    ^ String streamContents: [ :stream |        stream nextPutAll: '=== POLYMORPHISM DEMONSTRATION ==='; cr; cr.        allRides do: [ :ride |            stream                 nextPutAll: ride rideDetails; cr;                nextPutAll: 'Calculated Fare: $'; nextPutAll: ride calculateFare asString; cr;                nextPutAll: '---'; cr ] ]! !----SNAPSHOT----2025-07-12T16:03:43.294-05:00 RideSharingApplication.image priorSource: 526!----SNAPSHOT----2025-07-12T16:03:43.307-05:00 RideSharingApplication.image priorSource: 9148!----QUIT/NOSAVE----2025-07-12T18:16:20.418-05:00 RideSharingApplication.image priorSource: 9242!----QUIT/NOSAVE----2025-07-12T18:16:20.43-05:00 RideSharingApplication.image priorSource: 9242!